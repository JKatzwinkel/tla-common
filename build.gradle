plugins {
    id 'jacoco'
    id 'checkstyle'
    id 'java-library'
    id 'maven-publish'
    id 'com.github.ben-manes.versions' version '0.51.0'
    id 'com.github.dawnwords.jacoco.badge' version '0.2.4'
}

group = 'com.github.jkatzwinkel'
version = '0.0.909'
java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = 'tla-common'
            pom {
                name = 'TLA Commons'
                description = 'DTO model and utility functions for the Thesaurus Linguae Aegyptiae web publication components'
            }

            from components.java
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    api 'com.fasterxml.jackson.core:jackson-databind:2.18.1'
    implementation 'org.slf4j:slf4j-api:2.1.0-alpha1'

    testImplementation 'org.slf4j:slf4j-simple:2.1.0-alpha1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.11.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.3'
    // instead of explicitly declaring this dependency, maybe migrate to test suites:
    // https://docs.gradle.org/8.4/userguide/jvm_test_suite_plugin.html
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.11.3'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

jacocoTestReport {
    reports {
        xml.required.set(true)
        html.required.set(true)
    }
    finalizedBy 'generateJacocoBadge'
}

check {
    dependsOn 'jacocoTestCoverageVerification'
}

checkstyle {
    toolVersion '10.17.0'
    configFile file("config/checkstyle/checkstyle.xml")
    ignoreFailures = true
    maxErrors = 100
}

checkstyleMain {
    configProperties += [
        'checkstyle.header.file': file('config/checkstyle/java.header'),
        'checkstyle.regexp.header.file': file('config/checkstyle/java_regexp.header')
    ]
}
checkstyleTest {
    configFile file("config/checkstyle/checkstyle-tests.xml")
    configProperties += [
        'checkstyle.header.file': file('config/checkstyle/java.header'),
        'checkstyle.regexp.header.file': file('config/checkstyle/java_regexp.header')
    ]
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.1
           }
        }
    }
}
